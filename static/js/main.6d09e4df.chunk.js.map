{"version":3,"sources":["serviceWorker.js","Header.js","Menu.js","GalleryModal.js","Gallery.js","Content.js","Footer.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","this","props","title","subTitle","Component","Menu","menuItems","sectionsName","map","sectionName","key","href","GalleryModal","handleKeyDown","bind","e","imageData","author","date","renderAuthorAndDate","className","description","closeModal","hasNext","hasPrev","findNext","findPrev","onClick","onKeyDown","src","alt","renderDescription","console","log","Gallery","state","currentIndex","renderImageContent","index","openModal","setState","undefined","preventDefault","prevState","inputData","hasNextSubCategory","imagesData","item","id","image_name","siteUrl","separator","length","Content","frameBorder","allow","allowFullScreen","itemsData","category","filter","sections","sectionsContent","content","type","renderVideo","renderContact","renderImages","getDataByCategory","name","Footer","footer","properties","url","App","section","Object","entries","line","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d09e4df.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1>{this.props.title}</h1>\n                <p>{this.props.subTitle}</p>\n            </header>\n        )\n    };\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport './style/Menu.css';\n\nclass Menu extends Component {\n    render() {\n        const { sectionsName } = this.props;\n        const menuItems = sectionsName.map(sectionName => {\n            return (\n                <li key={sectionName}><a href={\"#\" + sectionName}>{sectionName}</a></li>\n            )\n        });\n\n        return (\n            <nav>\n                <ol>\n                    {menuItems}\n                </ol>\n            </nav>\n        )\n    };\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport './style/GalleryModal.css';\n\nclass GalleryModal extends Component {\n    constructor() {\n        super();\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n    componentDidMount() {\n        //document.body.addEventListener('keydown', this.handleKeyDown);\n    }\n    componentWillUnmount() {\n        //document.body.removeEventListener('keydown', this.handleKeyDown);\n    }\n    handleKeyDown(e) {\n        /*if (e.keyCode === 27)\n            this.props.closeModal();\n        if (e.keyCode === 37 && this.props.hasPrev) {\n            console.log(\"To the left\");\n            this.props.findPrev();\n        }\n        if (e.keyCode === 39 && this.props.hasNext) {\n            console.log(\"To the right\");\n            this.props.findNext();\n        }*/\n    }\n    renderDescription(imageData) {\n        const author = imageData.author;\n        let date = imageData.date;\n        date = author ? \" \" + date : date;\n        const renderAuthorAndDate = author || date ? (<p className=\"author-date\">{author}{date}&nbsp;</p>) : null;\n        return (\n            <div className=\"modal-legend\">\n                {renderAuthorAndDate}\n                <p>{imageData.description}</p>\n            </div>\n        )\n    }\n    render () {\n        const { closeModal, hasNext, hasPrev, findNext, findPrev, imageData } = this.props;\n        if (!imageData) {\n            console.log('whut');\n            return null;\n        }\n        //console.log(\"src: \" + src);\n        return (\n            <div>\n                <div className=\"modal-overlay\" onClick={closeModal}/>\n                <div className=\"modal\">\n                    <div className='modal-body'>\n                        <a href=\"#\" className='modal-close' onClick={closeModal} onKeyDown={this.handleKeyDown}>&times;</a>\n                        {hasPrev && <a href=\"#\" className='modal-prev' onClick={findPrev} onKeyDown={this.handleKeyDown}>&lsaquo;</a>}\n                        {hasNext && <a href=\"#\" className='modal-next' onClick={findNext} onKeyDown={this.handleKeyDown}>&rsaquo;</a>}\n                        <img src={imageData.src} alt={\"\"} />\n                    </div>\n                    {this.renderDescription(imageData)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GalleryModal;\n","import React, {Component} from 'react';\nimport './style/Gallery.css';\nimport GalleryModal from \"./GalleryModal\";\n\nconst siteUrl = \"https://tamielh.github.io/victoriakorolkova/\";\n\nfunction getImageSrc(id) {\n    return siteUrl + \"img/\" + id + \".jpg\";\n}\n\nclass Gallery extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {currentIndex: null};\n        this.closeModal = this.closeModal.bind(this);\n        this.findNext = this.findNext.bind(this);\n        this.findPrev = this.findPrev.bind(this);\n        this.renderImageContent = this.renderImageContent.bind(this);\n        /*this.inputData = this.props.inputData;*/\n    }\n    renderImageContent(src, index, description) {\n        //console.log(\"index: \" + index);\n        return (\n            <div key={index} onClick={(e) => this.openModal(e, index)}>\n                <img src={src} key={src} alt=\"\" />\n            </div>\n        )\n    }\n    openModal(e, index) {\n        this.setState ({ currentIndex: index });\n    }\n    closeModal(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState ({ currentIndex: null });\n    }\n    findPrev(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex - 1\n        }));\n    }\n    findNext(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex + 1\n        }));\n    }\n    render() {\n        const { inputData, hasNextSubCategory } = this.props;\n\n        const imagesData = inputData.map(item => ({\n                src: getImageSrc(item.image_name),\n                description: item.description,\n                author: item.author,\n                date: item.date\n        }));\n\n        const separator = hasNextSubCategory ? (<hr className=\"separator\" />) : (\"\");\n\n        return (\n            <div className=\"gallery-container\">\n                <div className=\"gallery-grid\">\n                    {imagesData.map((item, index) => this.renderImageContent(item.src, index, item.description))}\n                </div>\n                {separator}\n                <GalleryModal\n                    closeModal={this.closeModal}\n                    findPrev={this.findPrev}\n                    findNext={this.findNext}\n                    hasPrev={this.state.currentIndex > 0}\n                    hasNext={this.state.currentIndex + 1 < imagesData.length}  /* TODO - Unsafe ! */\n                    imageData={this.state.currentIndex !== null ? imagesData[this.state.currentIndex] : null}\n\n                />\n            </div>\n        )\n    }\n}\n\nexport default Gallery;\n","import React, {Component} from 'react';\nimport Gallery from './Gallery';\nimport './style/Content.css';\n\nclass Content extends Component {\n    renderImages(imagesData, hasNextSubCategory) {\n        console.log(\"index: \" + hasNextSubCategory);\n        return (\n            <Gallery\n                inputData={imagesData}\n                hasNextSubCategory={hasNextSubCategory}\n            />\n           )\n    }\n\n    renderVideo() {\n        return (\n            <div className=\"video-container\">\n                <iframe src='https://www.youtube.com/embed/Rxr97xY3lJk'\n                        frameBorder='0'\n                        allow='autoplay; encrypted-media'\n                        allowFullScreen\n                        title='video'\n                />\n            </div>\n        );\n    }\n\n    renderContact() {\n        return (\n            <div className=\"contact-container\">\n                <p>CONTACT</p>\n            </div>\n        );\n    }\n\n    getDataByCategory(itemsData, category) {\n        return itemsData.filter(itemsData => itemsData.category === category);\n    }\n\n    render() {\n        const { sections, imagesData } = this.props;\n\n        const sectionsContent = sections.map(sectionName => {\n            let content;\n            switch (sectionName.type) {\n                case \"video\":\n                    content = this.renderVideo();\n                    break;\n                case \"contact\":\n                    content = this.renderContact();\n                    break;\n                case \"gallery\":\n                    content = sectionName.key.map((key, index) =>\n                        this.renderImages(this.getDataByCategory(imagesData, key),\n                            index !== (sectionName.key.length - 1)));\n            }\n\n            return (\n                <section key={sectionName.name} id={sectionName.name}>\n                    <h1>{sectionName.name}</h1>\n                    {content}\n                </section>\n            )\n        });\n\n        return (\n            <main>\n                {sectionsContent}\n            </main>\n        )\n    };\n}\n\nexport default Content;\n","import React, {Component} from 'react';\nimport './style/Footer.css';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <p>{this.props.footer}</p>\n            </footer>\n        )\n    };\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport inputData from \"./inputData\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Content from \"./Content\";\nimport Footer from \"./Footer\";\n\nconst properties = {\n    title: \"Victoria Korolkova\",\n    subTitle: \"Je suis une super artiste\",\n    sectionsName: [\"Mes réalisations\", \"Musée imaginaire\", /*\"Video\",*/ \"Contact\"],\n    footer: \"Made by Thibaud Amielh, 2020\",\n    url: \"vkorolkova.art\"\n};\n\nconst sections = [\n    {name: \"Collages\", type: \"gallery\", key: [\"collage\"]},\n    {name: \"Croquis\", type: \"gallery\", key: [\"croquis_t1\", \"croquis_t2\", \"croquis_t3\"]}, //TODO - ajouter les t2 et t3\n    {name: \"Dessins\", type: \"gallery\", key: [\"dessin\"]},\n    {name: \"Musée imaginaire\", type: \"gallery\", key: [\"museum\"]},\n    //{name: \"Vidéo\", type: [\"video\"]},\n    {name: \"Contact\", type: \"contact\", key: [null]}\n];\n\nfunction getImagesData () {\n    return Object.entries(inputData).map(line => line[1]);\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"content-site\">\n                <Header\n                    title={properties.title}\n                    subTitle={properties.subTitle}\n                />\n                <Menu\n                    sectionsName={sections.map(section => section.name)}\n                />\n                <Content\n                    properties={properties}\n                    sections={sections}\n                    imagesData={getImagesData()}\n                />\n                <Footer\n                    footer={properties.footer}\n                />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}