{"version":3,"sources":["serviceWorker.js","Header.js","Menu.js","GalleryModal.js","Gallery.js","Content.js","Footer.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","this","props","title","subTitle","Component","Menu","menuItems","sectionsName","map","section","key","href","GalleryModal","handleKeyDown","bind","e","closeModal","hasNext","hasPrev","findNext","findPrev","src","className","onClick","onKeyDown","alt","console","log","getImageSrc","id","siteUrl","Gallery","state","currentIndex","renderImageContent","index","openModal","setState","undefined","preventDefault","prevState","imgUrls","inputData","imagesId","length","Content","frameBorder","allow","allowFullScreen","category","filter","sectionsNames","sections","sectionName","content","type","renderVideo","renderContact","renderImages","filterByCategory","name","toLowerCase","Footer","footer","properties","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f90f2f23.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1>{this.props.title}</h1>\n                <p>{this.props.subTitle}</p>\n            </header>\n        )\n    };\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport './style/Menu.css';\n\nclass Menu extends Component {\n    render() {\n        const { sectionsName } = this.props;\n        const menuItems = sectionsName.map(section => {\n            return (\n                <li key={section}><a href={\"#\" + section}>{section}</a></li>\n            )\n        });\n\n        return (\n            <nav>\n                <ol>\n                    {menuItems}\n                </ol>\n            </nav>\n        )\n    };\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport './style/GalleryModal.css';\n\nclass GalleryModal extends Component {\n    constructor() {\n        super();\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n    componentDidMount() {\n        //document.body.addEventListener('keydown', this.handleKeyDown);\n    }\n    componentWillUnmount() {\n        //document.body.removeEventListener('keydown', this.handleKeyDown);\n    }\n    handleKeyDown(e) {\n        /*if (e.keyCode === 27)\n            this.props.closeModal();\n        if (e.keyCode === 37 && this.props.hasPrev) {\n            console.log(\"To the left\");\n            this.props.findPrev();\n        }\n        if (e.keyCode === 39 && this.props.hasNext) {\n            console.log(\"To the right\");\n            this.props.findNext();\n        }*/\n    }\n    render () {\n        const { closeModal, hasNext, hasPrev, findNext, findPrev, src } = this.props;\n        if (!src) {\n            console.log('whut');\n            return null;\n        }\n        return (\n            <div>\n                <div className=\"modal-overlay\" onClick={closeModal}/>\n                <div className=\"modal\">\n                    <div className='modal-body'>\n                        <a href=\"#\" className='modal-close' onClick={closeModal} onKeyDown={this.handleKeyDown}>&times;</a>\n                        {hasPrev && <a href=\"#\" className='modal-prev' onClick={findPrev} onKeyDown={this.handleKeyDown}>&lsaquo;</a>}\n                        {hasNext && <a href=\"#\" className='modal-next' onClick={findNext} onKeyDown={this.handleKeyDown}>&rsaquo;</a>}\n                        <img src={src} alt={\"\"} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GalleryModal;\n","import React, {Component} from 'react';\nimport './style/Gallery.css';\nimport GalleryModal from \"./GalleryModal\";\n\nconst siteUrl = \"https://tamielh.github.io/victoriakorolkova/\";\n\nfunction getImageSrc(id) {\n    return siteUrl + \"img/\" + id + \".jpeg\";\n}\n\nclass Gallery extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {currentIndex: null};\n        this.closeModal = this.closeModal.bind(this);\n        this.findNext = this.findNext.bind(this);\n        this.findPrev = this.findPrev.bind(this);\n        this.renderImageContent = this.renderImageContent.bind(this);\n        /*this.inputData = this.props.inputData;*/\n    }\n    renderImageContent(src, index) {\n        return (\n            <div key={index} onClick={(e) => this.openModal(e, index)}>\n                <img src={src} key={src} alt=\"\" />\n            </div>\n        )\n    }\n    openModal(e, index) {\n        this.setState ({ currentIndex: index });\n    }\n    closeModal(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState ({ currentIndex: null });\n    }\n    findPrev(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex - 1\n        }));\n    }\n    findNext(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex + 1\n        }));\n    }\n    render() {\n        const { inputData, imagesId } = this.props;\n        /*\n            Should be inputData : id, category, description (or legend), author, date\n        */\n        let imgUrls = imagesId.map(getImageSrc);\n        return (\n            <div className=\"gallery-container\">\n                <div className=\"gallery-grid\">\n                    {imgUrls.map(this.renderImageContent)}\n                </div>\n                <GalleryModal\n                    closeModal={this.closeModal}\n                    findPrev={this.findPrev}\n                    findNext={this.findNext}\n                    hasPrev={this.state.currentIndex > 0}\n                    hasNext={this.state.currentIndex + 1 < imgUrls.length}  /* TODO - Unsafe ! */\n                    src={imgUrls[this.state.currentIndex]}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Gallery;\n","import React, {Component} from 'react';\nimport Gallery from './Gallery';\nimport './style/Content.css';\n\nclass Content extends Component {\n    renderImages(inputData) {\n        return (\n            <Gallery\n                inputData={inputData}\n                imagesId={[1,2,3,4,5,6,7,8,9,10,11,12]}\n            />\n           )\n    }\n\n    renderVideo() {\n        return (\n            <div className=\"video-container\">\n                <iframe src='https://www.youtube.com/embed/Rxr97xY3lJk'\n                        frameBorder='0'\n                        allow='autoplay; encrypted-media'\n                        allowFullScreen\n                        title='video'\n                />\n            </div>\n        );\n    }\n\n    renderContact() {\n        return (\n            <div className=\"contact-container\">\n                <p>CONTACT</p>\n            </div>\n        );\n    }\n\n    filterByCategory(inputData, category) {\n        return inputData.filter(inputData => inputData.category === category);\n    }\n\n    render() {\n        const { sectionsNames, inputData } = this.props;\n\n        const sections = sectionsNames.map(sectionName => {\n            let content;\n\n            switch (sectionName.type) {\n                case \"video\":\n                    content = this.renderVideo();\n                    break;\n                case \"contact\":\n                    content = this.renderContact();\n                    break;\n                case \"gallery\":\n                    content = this.renderImages(this.filterByCategory(inputData, sectionName.name.toLowerCase()));\n            }\n\n            return (\n                <section key={sectionName.name} id={sectionName.name}>\n                    <h1>{sectionName.name}</h1>\n                    {content}\n                </section>\n            )\n        });\n\n        return (\n            <main>\n                {sections}\n            </main>\n        )\n    };\n}\n\nexport default Content;\n","import React, {Component} from 'react';\nimport './style/Footer.css';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <p>{this.props.footer}</p>\n            </footer>\n        )\n    };\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport inputData from \"./data\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Content from \"./Content\";\nimport Footer from \"./Footer\";\n\nconst properties = {\n    title: \"Victoria Korolkova\",\n    subTitle: \"Je suis une super artiste\",\n    sectionsName: [\"Mes réalisations\", \"Musée imaginaire\", \"Video\", \"Contact\"],\n    /*sectionsName: [\n        {name: \"Mes réalisations\", type: \"gallery\"},\n        {name: \"Musée imaginaire\", type: \"gallery\"},\n        {name: \"Vidéo\", type: \"video\"},\n        {name: \"Contact\", type: \"contact\"},\n    ],*/\n    footer: \"Made by Thibaud Amielh, 2020\",\n};\n\nconst sections = [\n    {name: \"Mes réalisations\", type: \"gallery\"},\n    {name: \"Musée imaginaire\", type: \"gallery\"},\n    {name: \"Vidéo\", type: \"video\"},\n    {name: \"Contact\", type: \"contact\"},\n];\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"content-site\">\n                <Header\n                    title={properties.title}\n                    subTitle={properties.subTitle}\n                />\n                <Menu\n                    sectionsName={properties.sectionsName}\n                />\n                <Content\n                    sectionsNames={sections}\n                    inputData={inputData}\n                />\n                <Footer\n                    footer={properties.footer}\n                />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}