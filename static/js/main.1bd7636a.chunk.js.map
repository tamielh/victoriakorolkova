{"version":3,"sources":["serviceWorker.js","Header.js","Menu.js","GalleryModal.js","Gallery.js","Content.js","Footer.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","this","props","title","subTitle","Component","Menu","menuItems","sectionsName","map","sectionName","key","href","GalleryModal","handleKeyDown","bind","document","body","addEventListener","removeEventListener","e","keyCode","closeModal","hasPrev","findPrev","hasNext","findNext","imageData","author","date","renderAuthorAndDate","className","description","onClick","onKeyDown","src","alt","renderDescription","React","getImageDataById","imagesData","id","findIndex","Gallery","state","currentIndex","renderImageContent","openModal","setState","console","log","undefined","preventDefault","prevState","inputData","hasNextSubCategory","image_name","siteUrl","separator","image","length","Content","galleryKey","frameBorder","allow","allowFullScreen","itemsData","category","filter","sections","sectionsContent","content","type","renderVideo","renderContact","index","renderGallery","getDataByCategory","name","Footer","footer","properties","url","App","section","Object","entries","line","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bd7636a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport './style/Header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1>{this.props.title}</h1>\n                <p>{this.props.subTitle}</p>\n            </header>\n        )\n    };\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport './style/Menu.css';\n\nclass Menu extends Component {\n    render() {\n        const { sectionsName } = this.props;\n        const menuItems = sectionsName.map(sectionName => {\n            return (\n                <li key={sectionName}><a href={\"#\" + sectionName}>{sectionName}</a></li>\n            )\n        });\n\n        return (\n            <nav>\n                <ol>\n                    {menuItems}\n                </ol>\n            </nav>\n        )\n    };\n}\n\nexport default Menu;\n","import React from 'react';\nimport './style/GalleryModal.css';\n\n// https://reactjsexample.com/smoking-hot-image-gallery-made-with-react/\nclass GalleryModal extends React.Component {\n\n    constructor() {\n        super();\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown(e) {\n        if (e.keyCode === 27)\n            this.props.closeModal();\n        if (e.keyCode === 37 && this.props.hasPrev) {\n            this.props.findPrev();\n        }\n        if (e.keyCode === 39 && this.props.hasNext) {\n            this.props.findNext();\n        }\n    }\n    renderDescription(imageData) {\n        const author = imageData.author;\n        let date = imageData.date;\n        date = author ? \" \" + date : date;\n        const renderAuthorAndDate = author || date ? (<p className=\"author-date\">{author}{date}&nbsp;</p>) : null;\n        return (\n            <div className=\"modal-legend\">\n                {renderAuthorAndDate}\n                <p>{imageData.description}</p>\n            </div>\n        )\n    }\n    render () {\n        const { closeModal, hasNext, hasPrev, findNext, findPrev, imageData } = this.props;\n\n        if (!imageData) return null;\n\n        return (\n            <div>\n                <div className=\"modal-overlay\" onClick={closeModal}/>\n                <div className=\"modal\">\n                    <div className='modal-body'>\n                        <a href=\"#\" className='modal-close' onClick={closeModal} onKeyDown={this.handleKeyDown}>&times;</a>\n                        {hasPrev && <a href=\"#\" className='modal-prev' onClick={findPrev} onKeyDown={this.handleKeyDown}>&lsaquo;</a>}\n                        {hasNext && <a href=\"#\" className='modal-next' onClick={findNext} onKeyDown={this.handleKeyDown}>&rsaquo;</a>}\n                        <img src={imageData.src} alt={\"\"} />\n                    </div>\n                    {this.renderDescription(imageData)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GalleryModal;\n","import React from 'react';\nimport './style/Gallery.css';\nimport GalleryModal from \"./GalleryModal\";\n\nconst siteUrl = \"https://tamielh.github.io/victoriakorolkova/\";\n\nfunction getImageSrc(id) {\n    return siteUrl + \"img/\" + id + \".jpg\";\n}\n\nfunction getImageDataById(imagesData, id) {\n    if(id === null) return null;\n    return imagesData[imagesData.findIndex(imageData => imageData.id === id)];\n}\n\nclass Gallery extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {currentIndex: null};\n        this.closeModal = this.closeModal.bind(this);\n        this.findNext = this.findNext.bind(this);\n        this.findPrev = this.findPrev.bind(this);\n        this.renderImageContent = this.renderImageContent.bind(this);\n    }\n\n    renderImageContent(src, id) {\n        return (\n            <div onClick={(e) => this.openModal(e, id)} key={id}>\n                <img src={src} key={id} alt=\"\" />\n            </div>\n        )\n    }\n    openModal(e, id) {\n        this.setState ({ currentIndex: id }, function () {\n            console.log(\"current index\" + this.state.currentIndex);\n        });\n    }\n    closeModal(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        this.setState ({ currentIndex: null });\n    }\n    findPrev(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        if(this.state.currentIndex != null) {\n            this.setState(prevState => ({\n                currentIndex: prevState.currentIndex - 1\n            }));\n        }\n    }\n    findNext(e) {\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n        if(this.state.currentIndex != null) {\n            this.setState(prevState => ({\n                currentIndex: prevState.currentIndex + 1\n            }));\n        }\n    }\n    render() {\n        const { inputData, hasNextSubCategory } = this.props;\n\n        const imagesData = inputData.map(imageData => ({\n                ...imageData,\n                src: getImageSrc(imageData.image_name)\n        }));\n\n        const separator = hasNextSubCategory ? (<hr className=\"separator\" />) : (\"\");\n        return (\n            <div className=\"gallery-container\">\n                <div className=\"gallery-grid\">\n                    {imagesData.map(image => this.renderImageContent(image.src, image.id))}\n                </div>\n                {separator}\n                <GalleryModal\n                    closeModal={this.closeModal}\n                    findPrev={this.findPrev}\n                    findNext={this.findNext}\n                    hasPrev={this.state.currentIndex > imagesData[0].id}\n                    hasNext={this.state.currentIndex + 1 < imagesData[imagesData.length - 1].id}\n                    imageData={getImageDataById(imagesData, this.state.currentIndex)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Gallery;\n","import React from 'react';\nimport Gallery from './Gallery';\nimport './style/Content.css';\n\nclass Content extends React.Component {\n    renderGallery(imagesData, hasNextSubCategory, galleryKey) {\n        return (\n            <Gallery\n                inputData={imagesData}\n                hasNextSubCategory={hasNextSubCategory}\n                key={galleryKey}\n            />\n           )\n    }\n\n    renderVideo() {\n        return (\n            <div className=\"video-container\">\n                <iframe src=\"https://www.youtube.com/embed/tTdCLvIfgtw\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title=\"fx video\"\n                />\n            </div>\n        );\n    }\n\n    renderContact() {\n        const siteUrl = \"https://tamielh.github.io/victoriakorolkova/\";\n        return (\n            <div className=\"contact-container\">\n                <img src={siteUrl + \"img/photo_profile.png\"} alt=\"image_profile\" />\n                    <p>Victoria Korolkova<br/>\n                    Moscou<br/>\n                    <a href=\"mailto:korolkova.victorya@gmail.com\">korolkova.victorya@gmail.com</a>\n                    </p>\n                <div className=\"buttons\">\n                    <a href=\"https://instagram.com/korolkova.victoria/\" className=\"fa fa-instagram\"/>\n                    <a href=\"https://facebook.com/people/VictoriaKorolkova/100004453956526\" className=\"fa fa-facebook\"/>\n                    <a href=\"https://vk.com/aletoru\" className=\"fa fa-vk\"/>\n                    <br/>\n                    <a href={`${window.location.href}cv_victoria.pdf`} className=\"fa fa-file-pdf-o\"/>\n                </div>\n            </div>\n        );\n    }\n\n    getDataByCategory(itemsData, category) {\n        return itemsData.filter(itemsData => itemsData.category === category);\n    }\n\n    render() {\n        const { sections, imagesData } = this.props;\n\n        const sectionsContent = sections.map(sectionName => {\n            let content;\n            switch (sectionName.type) {\n                case \"video\":\n                    content = this.renderVideo();\n                    break;\n                case \"contact\":\n                    content = this.renderContact();\n                    break;\n                case \"gallery\":\n                    content = sectionName.key.map((key, index) =>\n                        this.renderGallery(\n                            this.getDataByCategory(imagesData, key),\n                            index !== (sectionName.key.length - 1),\n                            key\n                        ));\n                    break;\n                default:\n                    content = null;\n            }\n\n            return (\n                <section key={sectionName.name} id={sectionName.name}>\n                    <h1>{sectionName.name}</h1>\n                    {content}\n                </section>\n            )\n        });\n\n        return (\n            <main>\n                {sectionsContent}\n            </main>\n        )\n    };\n}\n\nexport default Content;\n","import React, {Component} from 'react';\nimport './style/Footer.css';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <p>{this.props.footer}</p>\n            </footer>\n        )\n    };\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport inputData from \"./inputData\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Content from \"./Content\";\nimport Footer from \"./Footer\";\n\nconst properties = {\n    title: \"Victoria Korolkova\",\n    subTitle: \"Poftfolio pour CampusArt\",\n    footer: \"Thibaud Amielh, 2020\",\n    url: \"vkorolkova.art\"\n};\n\nconst sections = [\n    {name: \"Collages\", type: \"gallery\", key: [\"collage\"]},\n    {name: \"Dessins\", type: \"gallery\", key: [\"dessin\"]},\n    {name: \"Croquis\", type: \"gallery\", key: [\"croquis_t1\", \"croquis_t2\", \"croquis_t3\"]},\n    {name: \"Musée imaginaire\", type: \"gallery\", key: [\"museum\"]},\n    {name: \"Effets spéciaux\", type: \"video\", key: [null]},\n    {name: \"Contact\", type: \"contact\", key: [null]}\n];\n\nfunction getImagesData () {\n    const imagesData = Object.entries(inputData).map(line => line[1]);\n    return imagesData.map((imageData, index) => ({ id: index, ...imageData }));\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"content-site\">\n                <Header\n                    title={properties.title}\n                    subTitle={properties.subTitle}\n                />\n                <Menu\n                    sectionsName={sections.map(section => section.name)}\n                />\n                <Content\n                    properties={properties}\n                    sections={sections}\n                    imagesData={getImagesData()}\n                />\n                <Footer\n                    footer={properties.footer}\n                />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}